  /**
   * Method updates the map which keeps track of a restaurant's votes.
   * 
   * @param rest
   * @param direction
   */
  private void updateVotes(Restaurant rest, String direction) {
    Map<String, Restaurant> dVotes = myChatroomMaps.getDownvotes();
    Map<String, Restaurant> upVotes = myChatroomMaps.getUpvotes();

    if (direction.equals("up")) {
      if (upVotes.containsKey(rest.getId())) {
        upVotes.get(rest.getId()).incrementUpVotes();
      } else {
        upVotes.put(rest.getId(), rest);
      }
    } else if (direction.equals("down")) {
      if (dVotes.containsKey(rest.getId())) {
        dVotes.get(rest.getId()).incrementDownVotes();
      } else {
        dVotes.put(rest.getId(), rest);
      }
    }
  }

  private void updateRestVotes(Restaurant rest) {
    Map<String, Restaurant> dvotes = myChatroomMaps.getDownvotes();
    Map<String, Restaurant> uvotes = myChatroomMaps.getUpvotes();
    if (dvotes.containsKey(rest.getId())) {
      rest.setDownVotes(dvotes.get(rest.getId()).getDownVotes());
    }
    if (uvotes.containsKey(rest.getId())) {
      rest.setUpVotes(uvotes.get(rest.getId()).getUpVotes());
    }
  }